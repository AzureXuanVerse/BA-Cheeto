name: MSBuild Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  SOLUTION_FILE_PATH: BA-Cheeto.sln  # 移除开头的./
  BUILD_CONFIGURATION: Release
  PLATFORM: x64
  TARGET_DLL: Cunny.dll

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Restore NuGet packages
        run: |
          msbuild "${{ env.SOLUTION_FILE_PATH }}" `
          /t:Restore `
          /p:Configuration=${{ env.BUILD_CONFIGURATION}} `
          /p:Platform=${{ env.PLATFORM}}

      - name: Build solution
        run: |
          msbuild "${{ env.SOLUTION_FILE_PATH }}" `
          /p:Configuration=${{ env.BUILD_CONFIGURATION}} `
          /p:Platform=${{ env.PLATFORM}} `
          /p:OutDir=$(System.DefaultWorkingDirectory)\bin\ `
          /p:GenerateProjectSpecificOutputFolder=false

      - name: Verify build output
        run: |
          $dllPath = Get-ChildItem -Path .\bin -Recurse -Filter "${{ env.TARGET_DLL }}" | Select-Object -First 1
          if (-not $dllPath) {
              Write-Output "##[error]DLL not found! Directory contents:"
              tree /f .\bin || dir .\bin /s
              exit 1
          }
          Write-Output "Found DLL at: $($dllPath.FullName)"
          Write-Output "##[group]DLL Info"
          [System.Reflection.AssemblyName]::GetAssemblyName($dllPath.FullName)
          Write-Output "##[endgroup]"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-binaries
          path: |
            bin/**/${{ env.TARGET_DLL }}
            bin/**/*.pdb
          if-no-files-found: error
