name: MSBuild Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  SOLUTION_FILE_PATH: BA-Cheeto.sln
  BUILD_CONFIGURATION: Release
  PLATFORM: x64
  TARGET_DLL: Cunny.dll

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2

      - name: Restore NuGet packages
        run: |
          msbuild "${{ env.SOLUTION_FILE_PATH }}" `
          /t:Restore `
          /p:Configuration=${{ env.BUILD_CONFIGURATION}} `
          /p:Platform=${{ env.PLATFORM}}

      - name: Build solution
        run: |
          # 使用GitHub Actions提供的环境变量
          $outDir = "$env:GITHUB_WORKSPACE\bin\"
          Write-Output "Output directory: $outDir"
          
          msbuild "${{ env.SOLUTION_FILE_PATH }}" `
          /p:Configuration=${{ env.BUILD_CONFIGURATION}} `
          /p:Platform=${{ env.PLATFORM}} `
          /p:OutDir="$outDir" `
          /p:GenerateProjectSpecificOutputFolder=false `
          /verbosity:minimal

      - name: Verify build output
        run: |
          $searchPath = "$env:GITHUB_WORKSPACE\bin"
          Write-Output "Searching in: $searchPath"
          
          $dllFiles = Get-ChildItem -Path $searchPath -Recurse -Filter "${{ env.TARGET_DLL }}"
          
          if (-not $dllFiles) {
              Write-Output "##[error]Target DLL not found!"
              Write-Output "##[group]Directory structure"
              tree /f $searchPath || dir $searchPath /s
              Write-Output "##[endgroup]"
              exit 1
          }
          
          foreach ($dll in $dllFiles) {
              Write-Output "##[group]Found DLL: $($dll.FullName)"
              [System.Reflection.AssemblyName]::GetAssemblyName($dll.FullName)
              Write-Output "##[endgroup]"
          }

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-binaries
          path: |
            bin/**/${{ env.TARGET_DLL }}
            bin/**/*.pdb
          if-no-files-found: error
